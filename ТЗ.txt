Техническое задание (ТЗ)
 Проект: Мобильное приложение с ИИ для индивидуальных планов тренировок, питания и
 сна
 Платформы: Android и iOS (Kotlin Multiplatform Mobile + Compose Multiplatform)
 Дата: 14.08.2025
 1. Цели и контекст
 Создать кросс‑платформенное мобильное приложение, которое в бесплатной версии
 предоставляет готовые программы тренировок и советы, а в подписке — персонализирует
 планы тренировок, питания и сна с учётом веса, целей, возраста, уровня подготовки,
 ограничений по здоровью и расписания пользователя. Персонализация реализуется
 комбинацией эвристик домена фитнес/нутрициология и генеративных моделей (LLM/ML).
 Ключевые метрики продукта: D1/D7/D30 retention, конверсия бесплатный→подписка,
 ежедневная активность (DAU/WAU), доля пользователей, завершивших ≥3 тренировки в
 неделю, средняя точность соблюдения плана питания (% от целевых
 калорий/макро‑баланса), NPS, доля обращений в саппорт по критичным проблемам (<2%).
 2. Объём работ: MVP и Pro
 2.1 MVP (3–4 месяца)
 • Регистрация/логин (почта, Apple, Google).
 • Онбординг: цели (похудение/набор/поддержание), опыт, ограничения, инвентарь,
 предпочтения по питанию (вегетарианство и т.п.).
 • Библиотека упражнений (видео, техника, мышцы).
 • Готовые программы (без персонализации).
 • Трекер тренировок: подходы/повторы/вес, автосохранение, офлайн‑режим.
 • Простейшая персонализация тренировок для подписки: коррекция
 объёма/интенсивности по RPE и истории.
 • План питания для подписки: расчёт TDEE (Mifflin‑St Jeor), целевые калории,
 макро‑разбивка, недельное меню, список покупок.
 • Интеграции: HealthKit/Google Fit (шаги, сон — чтение), уведомления (локальные).
 • Подписки: StoreKit + Google Play Billing, серверная валидация, анти‑фрод.
 • Аналитика: event‑схема, A/B‑флаги, crash reporting.
 • Политика конфиденциальности, согласия, медицинский дисклеймер.
 2.2 Pro (после MVP)
• Генеративные советы (LLM) с контекстом истории пользователя, пищевых предпочтений
 и расписания.
 • Авто‑адаптация плана после пропусков/перетренированности, детект «усталости» по
 трендам сна/HRV (если доступно).
 • Рекомендуемые рецепты с заменами, ограничениями по бюджету/времени.
 • Соц‑фичи: челленджи, группы, шеринги прогресса.
 • Персональные виджеты на экран: сегодня тренировка, приёмы пищи, напоминания.
 • Многоязычность, ассистивные технологии, расширенные офлайн‑возможности.
 3. Роли и персоны
 • Новичок: хочет безопасно начать, избегая перегрузок; нуждается в видео‑инструкциях и
 простых планах.
 • Энтузиаст: следит за прогрессом, оптимизирует питание и сон, ценит гибкую
 персонализацию.
 • Профессионал: тонкие настройки периодизации, экспорт данных, интеграции
 (Garmin/Polar, приоритет позже).
 4. Функциональные требования
 4.1 Онбординг и профиль
 Сбор данных: возраст, пол, рост, вес, цели, опыт, доступное оборудование,
 ограничения/травмы, график недели, пищевые предпочтения/аллергии, бюджет на
 питание, нежелательные продукты. Возможность редактирования и повторного
 онбординга.
 4.2 Тренировки
 • Каталог упражнений: название, группы мышц, техника, риски/противопоказания,
 уровни сложности, видео (локально + CDN).
 • Планы: структура микро‑циклов/недель, прогрессии (линейная, двойная,
 RIR/RPE‑управляемая), делoad‑недели.
 • Трекер: фиксирование подходов/повторов/веса/времени; автосохранение; «быстрый
 лог»; таймер отдыха; офлайн режим.
 • Персонализация (подписка): адаптация объёма/интенсивности по истории, RPE,
 доступному времени; учёт ограничений и инвентаря.
 4.3 Питание
 • Расчёт TDEE (Mifflin‑St Jeor) с коэффициентом активности; дефицит/профицит по цели;
 макро‑разбивка (б/ж/у).
• Автогенерация меню на неделю с заменами и порционным расчётом.
 • Список покупок; отметки съеденного; рекомендации по времени приёмов пищи.
 • Учёт предпочтений и аллергий; локализация по кухне региона (позже).
 4.4 Сон и восстановление
 • Импорт данных сна из HealthKit/Google Fit (при согласии).
 • Советы по режиму: цель по времени отхода ко сну, гигиена сна, мягкие напоминания.
 • Влияние сна на тренировочный план (регулировка объёма при плохом сне).
 4.5 ИИ‑составляющая
 • Генерация персональных планов и советов на базе гибридной логики: доменные
 правила + LLM (GPT‑класс) с ограничением на медицинские утверждения и безопасностью
 ответов.
 • LLM получает только псевдонимизированный профиль и агрегированные метрики, без
 лишних персональных данных.
 • Все рекомендации помечены как «не медицинский совет». Краевые случаи и риски
 эскалируются в шаблонные безопасные сообщения.
 5. Нефункциональные требования
 • Производительность: холодный старт <2.5 c на устройствах среднего уровня (Android
 10+, iOS 15+).
 • Надёжность: крэши <0.5% сессий; успешный синк >99%.
 • Офлайн: кэш планов/каталога, лог тренировок локально; конфликт‑резолв при
 синхронизации.
 • Конфиденциальность: соответствие GDPR; явные согласия на обработку данных
 здоровья; минимизация данных.
 • Безопасность: TLS 1.2+, pinning (по возможности), OIDC/JWT, серверная валидация
 подписок, защита webhook‑ов.
 • Логирование/аналитика: amplitude/mixpanel/GA4 (одно выбрать), Sentry/Crashlytics.
 6. Архитектура и стек
 • Kotlin Multiplatform Mobile (KMM). Общий модуль :shared (domain, data, ML‑логика). UI —
 Compose Multiplatform для Android и iOS (или вариант: Jetpack Compose + Compose for iOS).
 • Чистая архитектура: слои domain/use‑cases, data/repositories, ui/presentation
 (MVVM/ScreenModel).
• DI: Koin (multiplatform).
 • Асинхронность: Kotlin Coroutines + Flow.
 • Сеть: Ktor Client (JSON: kotlinx.serialization).
 • Хранение: SQLDelight (общая схема), Settings (key‑value).
 • МЛ/LLM: серверная интеграция с провайдером LLM через API; на устройстве — лёгкие
 эвристики и расчёты.
 • Бэкенд (Ktor/KT): Auth, Users, Plans, Recipes, Purchases, Telemetry, Feature Flags. БД —
 Postgres + Redis (кэш/очереди).
 6.1 Модули KMM
 • :app-android — Android контейнер, разрешения, биллинг, пуши, Health Connect.
 • :app-ios — iOS контейнер (Compose Multiplatform), интеграция HealthKit, StoreKit 2.
 • :shared — бизнес‑логика, use case‑ы, репозитории, модели, валидаторы, мапперы,
 стратегии персонализации.
 • :ml — (опционально) клиенты LLM, политики приватности, форматирование промптов,
 кэширование ответов.
 7. API контракты (укороченная выборка)
 POST /api/v1/auth/signup {email, password} -> {userId, token} POST
 /api/v1/auth/oauth/{provider} -> {userId, token} GET /api/v1/me -> {profile,
 subscriptions} PUT /api/v1/me -> {updatedProfile} POST /api/v1/plan/trainings/generate
 {profile, history} -> {weeks[]} POST /api/v1/plan/nutrition/generate {profile, prefs} ->
 {menu, macros} GET /api/v1/catalog/exercises -> {items[]} POST /api/v1/purchases/validate-> {status, sku, expiry} POST /api/v1/ai/advice {context} -> {messages[]}
 8. Персонализация: алгоритмы и правила
 • TDEE: Mifflin–St Jeor с коэффициентом активности; целевые калории ±10–20% в
 зависимости от цели и предпочтений скорости изменения веса.
 • Макросы: белки 1.6–2.2 г/кг (цель‑зависимо), жиры ≥0.8 г/кг, углеводы — остаток;
 корректировки при низкой энергии/плохом сне.
 • Тренировки: недельная цель по набранным «тоннажу/повторениям», прогрессия по
 RIR/RPE, автоматический deload при ухудшении метрик.
 • Сон: если средний сон <6.5 ч/ночь 3+ дней подряд — снижать объём на 10–20%,
 повышать отдых; добавлять советы гигиены сна.
 • Безопасность: фильтры по травмам/ограничениям исключают проблемные упражнения
и предлагают альтернативы.
 9. UX‑потоки и ключевые экраны
 • Онбординг (5–7 шагов), Дом (сегодня: тренировка/питание/сон), Тренировка (план,
 таймер, лог), Питание (меню, список покупок), Сон, Прогресс (графики),
 Профиль/настройки, Paywall/подписка, Справка/дисклеймеры.
 10. Подписки и биллинг
 • Тарифы: Free (ограниченный функционал), Pro Monthly/Yearly (пробный период по
 возможности).
 • Серверная валидация чеков/App Store Server API/Google Play Developer API, обработка
 webhook‑ов, grace‑period, пауза подписки.
 • Фича‑флаги блокируют платные фичи, если подписка неактивна.
 11. Аналитика, события и A/B‑тестирование
 События: onboarding_completed, workout_started/completed, set_logged, meal_completed,
 advice_opened, paywall_viewed, purchase_success, subscription_renewed, churn_warning. A/B:
 варианты paywall, интенсивность напоминаний, формулировка советов. KPI: конверсия в
 подписку, удержание, среднее число выполненных тренировок/неделю.
 12. Качество, тестирование, безопасность
 • Unit/Instrumentation/UITests (Compose): покрытие критичных путей ≥70%.
 • Нагрузочные тесты API; хаос‑сценарии офлайн/потеря сети/конфликты синка.
 • Security: audit зависимостей, секреты в vault, ротация ключей, минимизация PII,
 псевдонимизация данных для LLM.
 13. Выпуск и операционные процессы
 • CI/CD: GitHub Actions — сборки KMM, юниты, линтеры (ktlint/detekt), подпись релизов;
 fastlane для выкладки.
 • Stores: листинги, скриншоты, полис privacy, возрастные рейтинги, запрос разрешений с
 Just‑In‑Time мотивацией.
 • Мониторинг продакшн‑метрик и обратной связи; цикл улучшений по данным.
 14. Риски и ограничения
 • Правовые риски «медицинских рекомендаций» — строгие дисклеймеры, запрет
 диагнозов/лекарств.
 • Качество генерации LLM — human‑in‑the‑loop при спорных кейсах, ограничение ответа
 правилами.
• Сложность KMM для iOS — раннее прототипирование UI на Compose for iOS и план B:
 нативная оболочка + общий :shared.
 15. Дорожная карта и критерии приёмки
 M1 (4 недели): каркас KMM, онбординг, каталог упражнений, офлайн‑лог тренировок,
 базовая аналитика.
 M2 (4 недели): платёжка/подписка, генерация тренировок (эвристики), HealthKit/Google Fit
 (чтение), уведомления.
 M3 (4 недели): питание (TDEE/меню/список покупок), синк/бэкенд, paywall + A/B,
 приватность/дисклеймеры.
 Release (2 недели): стабилизация, локализация EN/RU, стор‑материалы, публикация в
 закрытом тесте, затем прод.
 Критерии приёмки MVP: все разделы работают офлайн с последующей синхронизацией;
 подписка корректно ограничивает доступ; генерация планов учитывает онбординг; крэши
 <0.5%; холодный старт <2.5 c.
 16. Приложение A — Шаблон модулей и слоёв
 shared/ domain/ usecase/ model/ validator/ data/ repository/ datasource/ remote/ (Ktor)
 local/ (SQLDelight, Settings) mapper/ ml/ llm/ prompts/ policy/ presentation/ common/
 (state, actions, reducers) androidApp/ ... (Compose, Billing, Health Connect) iosApp/ ...
 (Compose for iOS, StoreKit 2, HealthKit)
 17. Приложение B — Промпт для GPT‑5 (ведущий инженер
 KMM)
 Ты — ведущий инженер KMM/Compose Multiplatform и релиз‑менеджер. Работай по чек‑листу
 ниже, выдавай пошаговые инструкции и готовые блоки кода. Всегда: 1) Сначала
 задокументируй план (списком задач), затем давай команды и код. 2) Пиши только валидный
 Kotlin/Gradle/Swift interop-код, без пропусков и "…". 3) Учитывай Clean Architecture
 (domain/data/presentation), DI через Koin, Ktor Client, SQLDelight, Coroutines/Flow,
 Compose Multiplatform. 4) Объясняй, куда вставить код (путь файла/модуль) и какие команды
 выполнить. 5) Добавляй проверки производительности, офлайн‑режима и приватности.
 Инициализация проекта - Сгенерируй KMM проект: модули :shared, :app-android, :app-ios
 (Compose for iOS). - Подготовь build.gradle.kts с версиями плагинов, targets (android,
 iosArm64, iosX64, iosSimulatorArm64), sourceSets, зависимостями (kotlinx-serialization,
 ktor, koin, sqldelight, coroutines, datetime, settings). - Настрой sqlDelight схемы и
 инициализацию БД во :shared. - Включи ktlint/detekt, unit tests, GitHub Actions workflow
 yaml. Бизнес-логика - Определи модели Profile, Goal, Equipment, Constraints,
 TrainingPlan, Workout, Exercise, NutritionPlan, Meal, Advice. - Реализуй usecases:
 GenerateTrainingPlan, LogWorkoutSet, GenerateNutritionPlan, SyncWithBackend,
 ValidateSubscription. - Репозитории: ProfileRepository, TrainingRepository,
 NutritionRepository, PurchasesRepository, AdviceRepository. - Добавь стратегии
 персонализации (эвристики + интерфейсы для LLM клиента). Сеть и бэкенд - Определи
 API-интерфейсы и DTO, создай Ktor client с сериализацией, ретраями, timeouts, и feature
 логирования. - Опиши заглушечный Ktor Server (микросервис) со списком эндпоинтов,
 Postgres/Redis, docker-compose.yml. - Реализуй серверную валидацию подписок
(Apple/Google) и вебхуки. UI - Compose Multiplatform экраны: Onboarding, Home, Workout,
 Nutrition, Sleep, Progress, Paywall, Settings. - Экран Workout: список упражнений,
 логирование подходов, таймер отдыха; состояние как State + Flow, сохранение офлайн. 
Экран Nutrition: меню на неделю, макросы, список покупок. - Paywall с вариантами для A/B,
 интеграция биллинга (StoreKit2/Google Billing). - Доступность: крупный шрифт, контраст,
 VoiceOver/TalkBack. Интеграции - HealthKit/Health Connect: разрешения, чтение шагов/сна,
 агрегация, отказоустойчивость. - Пуш-уведомления: локальные расписания, отмена, глубокие
 ссылки. - Аналитика: предложи схему событий и внедри логирование на ключевых экранах.
 Генеративные советы (LLM) - Определи формат промптов и контекста, псевдонимизацию, лимиты
 длины, кэширование ответов. - Верни примеры запросов и обработку ошибок/таймаутов. Тесты
 и качество - Покрой юнит‑тестами usecase‑ы и мапперы; снапшот‑тесты UI (если возможно). 
Проведи проверки офлайн‑сценариев и конфликтов синка. Выкладка - Подготовь fastlane для
 Android/iOS, подпись, скриншоты скриптами, чек‑лист публикации в Play Console и App Store
 Connect. - Сформируй TODO для post‑release улучшений и метрик. Формат ответа - Разделы:
 План → Команды → Файлы и код → Проверки → Следующий шаг. - К каждому коду укажи точный
 путь и модуль.
 18. Правовые и этические примечания
 Приложение не предоставляет медицинских услуг. Все советы носят информационный
 характер и не заменяют консультацию врача. Требуется явное согласие пользователя на
 обработку чувствительных данных (здоровье, питание, сон), право на удаление/экспорт
 данных, прозрачность моделей и источников рекомендаций.
 Конец документа.